<?php

/**
 * @file
 * The main module file.
 *
 * The main module file contains hooks to create the permissions used by the
 * module, to log the login data, and to expose the module to views.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_help().
 */
function login_frequency_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the login_frequency module.
    case 'help.page.login_frequency':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("Track user's login frequency.") . '</p>';
      return $output;
    default:
  }

}

/**
 * Implements hook_user_login().
 *
 * Stores the fact that the user has logged in. 3rd party modules may override
 * whether a particular login is tracked by using
 * hook_login_tracker_track_login_alter(). Modules may also provide additional
 * data to be logged by using
 * hook_login_tracker_login_data_alter().
 */
function login_frequency_user_login($account) {

  // Do not track the login by default if the user's role is excluded.
  $track_login = !$account->hasPermission('excluded_from_login_frequency');

  // Allow other modules to override whether or not we're tracking this
  // login.
  \Drupal::moduleHandler()->alter('login_frequency_track_login', $track_login, $account);

  if (!$track_login) {
    return;
  }

  $data = array();
  \Drupal::moduleHandler()->alter('login_frequency_login_data', $data, $account);
  $data = serialize($data);
  $ip_address = \Drupal::request()->getClientIp();

  $fields = array(
    'uid' => $account->id(),
    'login_timestamp' => REQUEST_TIME,
    'login_data' => $data,
    'ip_address' => $ip_address,
  );

  \Drupal::database()->insert('login_frequency')
      ->fields($fields)
      ->execute();
}
